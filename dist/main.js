(()=>{"use strict";const e=(()=>{const e=t=>{t.preventDefault();const a=t.target;if(Array.from(a.classList).includes("contains-ship-image"))return;const s=t.dataTransfer.getData("image"),r=JSON.parse(s),i=r.image;r.shipLength,""!==i&&(a.classList.add("contains-ship-image"),a.classList.add("ship-image-5"),a.classList.add("ship-image-5-3"),a.removeEventListener("drop",e))};return{getDraggedImage:e=>{const t={image:e.target.src,shipLength:e.target.dataset.shipLength},a=JSON.stringify(t);e.dataTransfer.setData("image",a)},dragOver:()=>{event.preventDefault()},insertDraggedImage:e,rotateShipImage:e=>{const t=Array.from(e.classList);t.includes("horizontal")?(e.classList.remove("horizontal"),e.classList.add("vertical")):t.includes("vertical")&&(e.classList.remove("vertical"),e.classList.add("horizontal"))},rotateDraggedImage:e=>{const t=e.target.cloneNode(),a=document.createElement("div");a.classList.add("temp-rotate"),((e,t)=>{const a=Array.from(t.classList);a.includes("horizontal")?e.classList.add("temp-rotate-horizontal"):a.includes("vertical")&&(e.classList.add("temp-rotate-vertical"),"5"===t.dataset.shipLength?e.classList.add("temp-rotate-vertical-5"):"4"===t.dataset.shipLength?e.classList.add("temp-rotate-vertical-4"):"3"===t.dataset.shipLength?e.classList.add("temp-rotate-vertical-3"):"2"===t.dataset.shipLength&&e.classList.add("temp-rotate-vertical-2"))})(a,t),a.appendChild(t),document.body.appendChild(a),e.dataTransfer.setDragImage(a,0,0),setTimeout((()=>{document.body.removeChild(a)}),0)}}})(),t=(()=>{const t=t=>{const a=["A","B","C","D","E","F","G","H","I","J"],s=["1","2","3","4","5","6","7","8","9","10"];for(let r=-1;r<10;r++)for(let i=-1;i<10;i++)if(-1===r)if(-1===i){const e=document.createElement("div");e.classList.add("gameboard-label"),e.style.visibility="hidden",t.appendChild(e)}else{const e=document.createElement("div");e.classList.add("column-label"),e.textContent=a[i],t.appendChild(e)}else if(-1===i){const e=document.createElement("div");e.classList.add("row-label"),e.textContent=s[r],t.appendChild(e)}else{const a=document.createElement("div");a.setAttribute("data-row",r),a.setAttribute("data-column",i),a.classList.add("gameboard-cell"),a.addEventListener("dragover",e.dragOver.bind(event)),a.addEventListener("drop",e.insertDraggedImage.bind(event)),t.appendChild(a)}};return{initializeBoardDOM:()=>{const e=document.querySelector(".player-board"),a=document.querySelector(".opponent-board");t(e),t(a)},rotateShipImageListeners:()=>{document.querySelectorAll(".ship-placement").forEach((t=>{const a=t.children[0];t.children[2].addEventListener("click",e.rotateShipImage.bind(event,a))}))},addShipPlacementDrag:()=>{Array.from(document.querySelectorAll(".ship-piece")).forEach((t=>{t.addEventListener("dragstart",(t=>{e.getDraggedImage(t),e.rotateDraggedImage(t)}))}))}}})();t.initializeBoardDOM(),t.rotateShipImageListeners(),t.addShipPlacementDrag()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,