(()=>{"use strict";const e=(()=>{const e=t=>{t.preventDefault();const a=t.target;if(Array.from(a.classList).includes("contains-ship-image"))return;const s=t.dataTransfer.getData("image");((e,t)=>{if(t.horizontal){if(Number(e.dataset.column)+Number(t.shipLength)>10);}else if(t.vertical&&Number(e.dataset.row)+Number(t.shipLength)>10);})(a,JSON.parse(s)),a.classList.add("contains-ship-image"),a.classList.add("ship-image-5"),a.classList.add("ship-image-5-3"),a.removeEventListener("drop",e)};return{getDraggedImage:e=>{const t={image:e.target.src,shipLength:e.target.dataset.shipLength,horizontal:!1,vertical:!1};Array.from(e.target.classList).includes("horizontal")?t.horizontal=!0:Array.from(e.target.classList).includes("vertical")&&(t.vertical=!0),console.log(t);const a=JSON.stringify(t);e.dataTransfer.setData("image",a)},dragOver:()=>{event.preventDefault()},insertDraggedImage:e,rotateShipImage:e=>{const t=Array.from(e.classList);t.includes("horizontal")?(e.classList.remove("horizontal"),e.classList.add("vertical")):t.includes("vertical")&&(e.classList.remove("vertical"),e.classList.add("horizontal"))},rotateDraggedImage:e=>{const t=e.target.cloneNode(),a=document.createElement("div");a.classList.add("temp-rotate"),((e,t)=>{const a=Array.from(t.classList);a.includes("horizontal")?e.classList.add("temp-rotate-horizontal"):a.includes("vertical")&&(e.classList.add("temp-rotate-vertical"),"5"===t.dataset.shipLength?e.classList.add("temp-rotate-vertical-5"):"4"===t.dataset.shipLength?e.classList.add("temp-rotate-vertical-4"):"3"===t.dataset.shipLength?e.classList.add("temp-rotate-vertical-3"):"2"===t.dataset.shipLength&&e.classList.add("temp-rotate-vertical-2"))})(a,t),a.appendChild(t),document.body.appendChild(a),e.dataTransfer.setDragImage(a,0,0),setTimeout((()=>{document.body.removeChild(a)}),0)}}})(),t=(()=>{const t=t=>{const a=["A","B","C","D","E","F","G","H","I","J"],s=["1","2","3","4","5","6","7","8","9","10"];for(let r=-1;r<10;r++)for(let i=-1;i<10;i++)if(-1===r)if(-1===i){const e=document.createElement("div");e.classList.add("gameboard-label"),e.style.visibility="hidden",t.appendChild(e)}else{const e=document.createElement("div");e.classList.add("column-label"),e.textContent=a[i],t.appendChild(e)}else if(-1===i){const e=document.createElement("div");e.classList.add("row-label"),e.textContent=s[r],t.appendChild(e)}else{const a=document.createElement("div");a.setAttribute("data-row",r),a.setAttribute("data-column",i),a.classList.add("gameboard-cell"),a.addEventListener("dragover",e.dragOver.bind(event)),a.addEventListener("drop",e.insertDraggedImage.bind(event)),t.appendChild(a)}};return{initializeBoardDOM:()=>{const e=document.querySelector(".player-board"),a=document.querySelector(".opponent-board");t(e),t(a)},rotateShipImageListeners:()=>{document.querySelectorAll(".ship-placement").forEach((t=>{const a=t.children[0];t.children[2].addEventListener("click",e.rotateShipImage.bind(event,a))}))},addShipPlacementDrag:()=>{Array.from(document.querySelectorAll(".ship-piece")).forEach((t=>{t.addEventListener("dragstart",(t=>{e.getDraggedImage(t),e.rotateDraggedImage(t)}))}))}}})();t.initializeBoardDOM(),t.rotateShipImageListeners(),t.addShipPlacementDrag()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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bUJBQ3BEbEIsRUFBaUJpQixHQUNqQmpCLEVBQWlCbUIsRUFBcUIsRUF3QnRDQyx5QkF0QitCLEtBQ0Q5QixTQUFTK0IsaUJBQWlCLG1CQUNsQ0MsU0FBU0MsSUFDN0IsTUFBTUMsRUFBTUQsRUFBS0UsU0FBUyxHQUNkRixFQUFLRSxTQUFTLEdBQ3RCWCxpQkFDRixRQUNBakUsRUFBd0JrQyxnQkFBZ0JnQyxLQUFLaEUsTUFBT3lFLEdBQ3JELEdBQ0QsRUFjRkUscUJBWjJCLEtBQ1J2RSxNQUFNQyxLQUFLa0MsU0FBUytCLGlCQUFpQixnQkFDN0NDLFNBQVNLLElBQ2xCQSxFQUFLYixpQkFBaUIsYUFBYy9ELElBQ2xDRixFQUF3QjBCLGdCQUFnQnhCLEdBQ3hDRixFQUF3QnFDLG1CQUFtQm5DLEVBQU0sR0FDakQsR0FDRixFQU9MLEVBMUVxQixHQ0F0QmdELEVBQWNpQixxQkFFZGpCLEVBQWNxQiwyQkFFZHJCLEVBQWMyQixzQiIsInNvdXJjZXMiOlsid2VicGFjazovL29kaW4tYmF0dGxlc2hpcC8uL3NyYy9ldmVudF9saXN0ZW5lcl9jb250cm9sbGVyLmpzIiwid2VicGFjazovL29kaW4tYmF0dGxlc2hpcC8uL3NyYy9ET01fY29udHJvbGxlci5qcyIsIndlYnBhY2s6Ly9vZGluLWJhdHRsZXNoaXAvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgRXZlbnRMaXN0ZW5lckNvbnRyb2xsZXIgPSAoKCkgPT4ge1xuICBjb25zdCBnZXREcmFnZ2VkSW1hZ2UgPSAoZXZlbnQpID0+IHtcbiAgICBjb25zdCBkYXRhT2JqZWN0ID0ge1xuICAgICAgaW1hZ2U6IGV2ZW50LnRhcmdldC5zcmMsXG4gICAgICBzaGlwTGVuZ3RoOiBldmVudC50YXJnZXQuZGF0YXNldC5zaGlwTGVuZ3RoLFxuICAgICAgaG9yaXpvbnRhbDogZmFsc2UsXG4gICAgICB2ZXJ0aWNhbDogZmFsc2UsXG4gICAgfTtcbiAgICBpZiAoQXJyYXkuZnJvbShldmVudC50YXJnZXQuY2xhc3NMaXN0KS5pbmNsdWRlcyhcImhvcml6b250YWxcIikpIHtcbiAgICAgIGRhdGFPYmplY3QuaG9yaXpvbnRhbCA9IHRydWU7XG4gICAgfSBlbHNlIGlmIChBcnJheS5mcm9tKGV2ZW50LnRhcmdldC5jbGFzc0xpc3QpLmluY2x1ZGVzKFwidmVydGljYWxcIikpIHtcbiAgICAgIGRhdGFPYmplY3QudmVydGljYWwgPSB0cnVlO1xuICAgIH1cbiAgICBjb25zb2xlLmxvZyhkYXRhT2JqZWN0KTtcbiAgICBjb25zdCBkYXRhU3RyaW5nID0gSlNPTi5zdHJpbmdpZnkoZGF0YU9iamVjdCk7XG4gICAgZXZlbnQuZGF0YVRyYW5zZmVyLnNldERhdGEoXCJpbWFnZVwiLCBkYXRhU3RyaW5nKTtcbiAgfTtcbiAgY29uc3QgZHJhZ092ZXIgPSAoKSA9PiB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgfTtcbiAgY29uc3QgaXNWYWxpZEdhbWVib2FyZENlbGwgPSAodGFyZ2V0Q2VsbCwgZGF0YU9iamVjdCkgPT4ge1xuICAgIGlmIChkYXRhT2JqZWN0Lmhvcml6b250YWwpIHtcbiAgICAgIGlmIChcbiAgICAgICAgTnVtYmVyKHRhcmdldENlbGwuZGF0YXNldC5jb2x1bW4pICsgTnVtYmVyKGRhdGFPYmplY3Quc2hpcExlbmd0aCkgPlxuICAgICAgICAxMFxuICAgICAgKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGRhdGFPYmplY3QudmVydGljYWwpIHtcbiAgICAgIGlmIChOdW1iZXIodGFyZ2V0Q2VsbC5kYXRhc2V0LnJvdykgKyBOdW1iZXIoZGF0YU9iamVjdC5zaGlwTGVuZ3RoKSA+IDEwKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG4gIH07XG4gIGNvbnN0IGluc2VydERyYWdnZWRJbWFnZSA9IChldmVudCkgPT4ge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc3QgdGFyZ2V0Q2VsbCA9IGV2ZW50LnRhcmdldDtcbiAgICBpZiAoQXJyYXkuZnJvbSh0YXJnZXRDZWxsLmNsYXNzTGlzdCkuaW5jbHVkZXMoXCJjb250YWlucy1zaGlwLWltYWdlXCIpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IGRhdGFTdHJpbmcgPSBldmVudC5kYXRhVHJhbnNmZXIuZ2V0RGF0YShcImltYWdlXCIpO1xuICAgIGNvbnN0IGRhdGFPYmplY3QgPSBKU09OLnBhcnNlKGRhdGFTdHJpbmcpO1xuICAgIC8vIGNvbnN0IGRyYWdnZWRJbWFnZSA9IGRhdGFPYmplY3QuaW1hZ2U7XG4gICAgLy8gY29uc3QgbGVuZ3RoID0gZGF0YU9iamVjdC5zaGlwTGVuZ3RoO1xuICAgIC8vIGlmIChkcmFnZ2VkSW1hZ2UgPT09IFwiXCIpIHtcbiAgICAvLyAgIHJldHVybjtcbiAgICAvLyB9XG4gICAgaXNWYWxpZEdhbWVib2FyZENlbGwodGFyZ2V0Q2VsbCwgZGF0YU9iamVjdCk7XG4gICAgdGFyZ2V0Q2VsbC5jbGFzc0xpc3QuYWRkKFwiY29udGFpbnMtc2hpcC1pbWFnZVwiKTtcbiAgICB0YXJnZXRDZWxsLmNsYXNzTGlzdC5hZGQoXCJzaGlwLWltYWdlLTVcIik7XG4gICAgdGFyZ2V0Q2VsbC5jbGFzc0xpc3QuYWRkKFwic2hpcC1pbWFnZS01LTNcIik7XG4gICAgdGFyZ2V0Q2VsbC5yZW1vdmVFdmVudExpc3RlbmVyKFwiZHJvcFwiLCBpbnNlcnREcmFnZ2VkSW1hZ2UpO1xuICB9O1xuICBjb25zdCByb3RhdGVTaGlwSW1hZ2UgPSAoaW1hZ2UpID0+IHtcbiAgICBjb25zdCBpbWFnZUNsYXNzZXMgPSBBcnJheS5mcm9tKGltYWdlLmNsYXNzTGlzdCk7XG4gICAgaWYgKGltYWdlQ2xhc3Nlcy5pbmNsdWRlcyhcImhvcml6b250YWxcIikpIHtcbiAgICAgIGltYWdlLmNsYXNzTGlzdC5yZW1vdmUoXCJob3Jpem9udGFsXCIpO1xuICAgICAgaW1hZ2UuY2xhc3NMaXN0LmFkZChcInZlcnRpY2FsXCIpO1xuICAgIH0gZWxzZSBpZiAoaW1hZ2VDbGFzc2VzLmluY2x1ZGVzKFwidmVydGljYWxcIikpIHtcbiAgICAgIGltYWdlLmNsYXNzTGlzdC5yZW1vdmUoXCJ2ZXJ0aWNhbFwiKTtcbiAgICAgIGltYWdlLmNsYXNzTGlzdC5hZGQoXCJob3Jpem9udGFsXCIpO1xuICAgIH1cbiAgfTtcbiAgY29uc3Qgcm90YXRlUGVyTGVuZ3RoID0gKHRlbXBEaXYsIGNsb25lZEltYWdlRWxlbWVudCkgPT4ge1xuICAgIGNvbnN0IGNsb25lZEltYWdlRWxlbWVudENsYXNzZXMgPSBBcnJheS5mcm9tKGNsb25lZEltYWdlRWxlbWVudC5jbGFzc0xpc3QpO1xuICAgIGlmIChjbG9uZWRJbWFnZUVsZW1lbnRDbGFzc2VzLmluY2x1ZGVzKFwiaG9yaXpvbnRhbFwiKSkge1xuICAgICAgdGVtcERpdi5jbGFzc0xpc3QuYWRkKFwidGVtcC1yb3RhdGUtaG9yaXpvbnRhbFwiKTtcbiAgICB9IGVsc2UgaWYgKGNsb25lZEltYWdlRWxlbWVudENsYXNzZXMuaW5jbHVkZXMoXCJ2ZXJ0aWNhbFwiKSkge1xuICAgICAgdGVtcERpdi5jbGFzc0xpc3QuYWRkKFwidGVtcC1yb3RhdGUtdmVydGljYWxcIik7XG4gICAgICBpZiAoY2xvbmVkSW1hZ2VFbGVtZW50LmRhdGFzZXQuc2hpcExlbmd0aCA9PT0gXCI1XCIpIHtcbiAgICAgICAgdGVtcERpdi5jbGFzc0xpc3QuYWRkKFwidGVtcC1yb3RhdGUtdmVydGljYWwtNVwiKTtcbiAgICAgIH0gZWxzZSBpZiAoY2xvbmVkSW1hZ2VFbGVtZW50LmRhdGFzZXQuc2hpcExlbmd0aCA9PT0gXCI0XCIpIHtcbiAgICAgICAgdGVtcERpdi5jbGFzc0xpc3QuYWRkKFwidGVtcC1yb3RhdGUtdmVydGljYWwtNFwiKTtcbiAgICAgIH0gZWxzZSBpZiAoY2xvbmVkSW1hZ2VFbGVtZW50LmRhdGFzZXQuc2hpcExlbmd0aCA9PT0gXCIzXCIpIHtcbiAgICAgICAgdGVtcERpdi5jbGFzc0xpc3QuYWRkKFwidGVtcC1yb3RhdGUtdmVydGljYWwtM1wiKTtcbiAgICAgIH0gZWxzZSBpZiAoY2xvbmVkSW1hZ2VFbGVtZW50LmRhdGFzZXQuc2hpcExlbmd0aCA9PT0gXCIyXCIpIHtcbiAgICAgICAgdGVtcERpdi5jbGFzc0xpc3QuYWRkKFwidGVtcC1yb3RhdGUtdmVydGljYWwtMlwiKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG4gIGNvbnN0IHJvdGF0ZURyYWdnZWRJbWFnZSA9IChldmVudCkgPT4ge1xuICAgIGNvbnN0IGltYWdlRWxlbWVudCA9IGV2ZW50LnRhcmdldDtcbiAgICBjb25zdCBjbG9uZWRJbWFnZUVsZW1lbnQgPSBpbWFnZUVsZW1lbnQuY2xvbmVOb2RlKCk7XG4gICAgY29uc3QgdGVtcERpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgdGVtcERpdi5jbGFzc0xpc3QuYWRkKFwidGVtcC1yb3RhdGVcIik7XG4gICAgcm90YXRlUGVyTGVuZ3RoKHRlbXBEaXYsIGNsb25lZEltYWdlRWxlbWVudCk7XG4gICAgdGVtcERpdi5hcHBlbmRDaGlsZChjbG9uZWRJbWFnZUVsZW1lbnQpO1xuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGVtcERpdik7XG4gICAgZXZlbnQuZGF0YVRyYW5zZmVyLnNldERyYWdJbWFnZSh0ZW1wRGl2LCAwLCAwKTtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQodGVtcERpdik7XG4gICAgfSwgMCk7XG4gIH07XG4gIHJldHVybiB7XG4gICAgZ2V0RHJhZ2dlZEltYWdlLFxuICAgIGRyYWdPdmVyLFxuICAgIGluc2VydERyYWdnZWRJbWFnZSxcbiAgICByb3RhdGVTaGlwSW1hZ2UsXG4gICAgcm90YXRlRHJhZ2dlZEltYWdlLFxuICB9O1xufSkoKTtcblxuZXhwb3J0IHsgRXZlbnRMaXN0ZW5lckNvbnRyb2xsZXIgfTtcbiIsImltcG9ydCB7IEV2ZW50TGlzdGVuZXJDb250cm9sbGVyIH0gZnJvbSBcIi4vZXZlbnRfbGlzdGVuZXJfY29udHJvbGxlclwiO1xuXG5jb25zdCBET01Db250cm9sbGVyID0gKCgpID0+IHtcbiAgY29uc3QgY3JlYXRlQm9hcmRDZWxscyA9IChnYW1lYm9hcmRET00pID0+IHtcbiAgICBjb25zdCBCT0FSREFYRVNMRU5HVEggPSAxMDtcbiAgICBjb25zdCBjb2x1bW5MYWJlbHMgPSBbXCJBXCIsIFwiQlwiLCBcIkNcIiwgXCJEXCIsIFwiRVwiLCBcIkZcIiwgXCJHXCIsIFwiSFwiLCBcIklcIiwgXCJKXCJdO1xuICAgIGNvbnN0IHJvd0xhYmVscyA9IFtcIjFcIiwgXCIyXCIsIFwiM1wiLCBcIjRcIiwgXCI1XCIsIFwiNlwiLCBcIjdcIiwgXCI4XCIsIFwiOVwiLCBcIjEwXCJdO1xuICAgIGZvciAobGV0IGkgPSAtMTsgaSA8IEJPQVJEQVhFU0xFTkdUSDsgaSsrKSB7XG4gICAgICBmb3IgKGxldCBqID0gLTE7IGogPCBCT0FSREFYRVNMRU5HVEg7IGorKykge1xuICAgICAgICBpZiAoaSA9PT0gLTEpIHtcbiAgICAgICAgICBpZiAoaiA9PT0gLTEpIHtcbiAgICAgICAgICAgIGNvbnN0IGludmlzaWJsZVBsYWNlaG9sZGVyRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgICAgICBpbnZpc2libGVQbGFjZWhvbGRlckVsZW1lbnQuY2xhc3NMaXN0LmFkZChcImdhbWVib2FyZC1sYWJlbFwiKTtcbiAgICAgICAgICAgIGludmlzaWJsZVBsYWNlaG9sZGVyRWxlbWVudC5zdHlsZS52aXNpYmlsaXR5ID0gXCJoaWRkZW5cIjtcbiAgICAgICAgICAgIGdhbWVib2FyZERPTS5hcHBlbmRDaGlsZChpbnZpc2libGVQbGFjZWhvbGRlckVsZW1lbnQpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBjb2x1bW5MYWJlbEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICAgICAgY29sdW1uTGFiZWxFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJjb2x1bW4tbGFiZWxcIik7XG4gICAgICAgICAgICBjb2x1bW5MYWJlbEVsZW1lbnQudGV4dENvbnRlbnQgPSBjb2x1bW5MYWJlbHNbal07XG4gICAgICAgICAgICBnYW1lYm9hcmRET00uYXBwZW5kQ2hpbGQoY29sdW1uTGFiZWxFbGVtZW50KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoaiA9PT0gLTEpIHtcbiAgICAgICAgICBjb25zdCByb3dMYWJlbEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICAgIHJvd0xhYmVsRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwicm93LWxhYmVsXCIpO1xuICAgICAgICAgIHJvd0xhYmVsRWxlbWVudC50ZXh0Q29udGVudCA9IHJvd0xhYmVsc1tpXTtcbiAgICAgICAgICBnYW1lYm9hcmRET00uYXBwZW5kQ2hpbGQocm93TGFiZWxFbGVtZW50KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjb25zdCBjZWxsRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgICAgY2VsbEVsZW1lbnQuc2V0QXR0cmlidXRlKFwiZGF0YS1yb3dcIiwgaSk7XG4gICAgICAgICAgY2VsbEVsZW1lbnQuc2V0QXR0cmlidXRlKFwiZGF0YS1jb2x1bW5cIiwgaik7XG4gICAgICAgICAgY2VsbEVsZW1lbnQuY2xhc3NMaXN0LmFkZChcImdhbWVib2FyZC1jZWxsXCIpO1xuICAgICAgICAgIGNlbGxFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICAgICAgICBcImRyYWdvdmVyXCIsXG4gICAgICAgICAgICBFdmVudExpc3RlbmVyQ29udHJvbGxlci5kcmFnT3Zlci5iaW5kKGV2ZW50KVxuICAgICAgICAgICk7XG4gICAgICAgICAgY2VsbEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcbiAgICAgICAgICAgIFwiZHJvcFwiLFxuICAgICAgICAgICAgRXZlbnRMaXN0ZW5lckNvbnRyb2xsZXIuaW5zZXJ0RHJhZ2dlZEltYWdlLmJpbmQoZXZlbnQpXG4gICAgICAgICAgKTtcbiAgICAgICAgICAvLyBzb21lIGNsaWNrIGV2ZW50IGxpc3RlbmVyIHdoZXJlIGF0dGFjayBpcyBtYWRlIE9SIHByaW9yIHRvIHRoYXQsIHBsYWNpbmcgc2hpcCBvbiB0aGF0IGNlbGxcbiAgICAgICAgICBnYW1lYm9hcmRET00uYXBwZW5kQ2hpbGQoY2VsbEVsZW1lbnQpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9O1xuICBjb25zdCBpbml0aWFsaXplQm9hcmRET00gPSAoKSA9PiB7XG4gICAgY29uc3QgaHVtYW5QbGF5ZXJHYW1lYm9hcmRET00gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBsYXllci1ib2FyZFwiKTtcbiAgICBjb25zdCBvcHBvbmVudEdhbWVib2FyZERPTSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIub3Bwb25lbnQtYm9hcmRcIik7XG4gICAgY3JlYXRlQm9hcmRDZWxscyhodW1hblBsYXllckdhbWVib2FyZERPTSk7XG4gICAgY3JlYXRlQm9hcmRDZWxscyhvcHBvbmVudEdhbWVib2FyZERPTSk7XG4gIH07XG4gIGNvbnN0IHJvdGF0ZVNoaXBJbWFnZUxpc3RlbmVycyA9ICgpID0+IHtcbiAgICBjb25zdCBzaGlwUGxhY2VtZW50RWxlbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLnNoaXAtcGxhY2VtZW50XCIpO1xuICAgIHNoaXBQbGFjZW1lbnRFbGVtZW50cy5mb3JFYWNoKChwYWlyKSA9PiB7XG4gICAgICBjb25zdCBpbWcgPSBwYWlyLmNoaWxkcmVuWzBdO1xuICAgICAgY29uc3QgYnRuID0gcGFpci5jaGlsZHJlblsyXTtcbiAgICAgIGJ0bi5hZGRFdmVudExpc3RlbmVyKFxuICAgICAgICBcImNsaWNrXCIsXG4gICAgICAgIEV2ZW50TGlzdGVuZXJDb250cm9sbGVyLnJvdGF0ZVNoaXBJbWFnZS5iaW5kKGV2ZW50LCBpbWcpXG4gICAgICApO1xuICAgIH0pO1xuICB9O1xuICBjb25zdCBhZGRTaGlwUGxhY2VtZW50RHJhZyA9ICgpID0+IHtcbiAgICBjb25zdCBzaGlwSW1hZ2VzID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLnNoaXAtcGllY2VcIikpO1xuICAgIHNoaXBJbWFnZXMuZm9yRWFjaCgoc2hpcCkgPT4ge1xuICAgICAgc2hpcC5hZGRFdmVudExpc3RlbmVyKFwiZHJhZ3N0YXJ0XCIsIChldmVudCkgPT4ge1xuICAgICAgICBFdmVudExpc3RlbmVyQ29udHJvbGxlci5nZXREcmFnZ2VkSW1hZ2UoZXZlbnQpO1xuICAgICAgICBFdmVudExpc3RlbmVyQ29udHJvbGxlci5yb3RhdGVEcmFnZ2VkSW1hZ2UoZXZlbnQpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG4gIHJldHVybiB7XG4gICAgaW5pdGlhbGl6ZUJvYXJkRE9NLFxuICAgIHJvdGF0ZVNoaXBJbWFnZUxpc3RlbmVycyxcbiAgICBhZGRTaGlwUGxhY2VtZW50RHJhZyxcbiAgfTtcbn0pKCk7XG5cbmV4cG9ydCB7IERPTUNvbnRyb2xsZXIgfTtcbiIsImltcG9ydCB7IERPTUNvbnRyb2xsZXIgfSBmcm9tIFwiLi9ET01fY29udHJvbGxlclwiO1xuXG5ET01Db250cm9sbGVyLmluaXRpYWxpemVCb2FyZERPTSgpO1xuXG5ET01Db250cm9sbGVyLnJvdGF0ZVNoaXBJbWFnZUxpc3RlbmVycygpO1xuXG5ET01Db250cm9sbGVyLmFkZFNoaXBQbGFjZW1lbnREcmFnKCk7XG4iXSwibmFtZXMiOlsiRXZlbnRMaXN0ZW5lckNvbnRyb2xsZXIiLCJpbnNlcnREcmFnZ2VkSW1hZ2UiLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwidGFyZ2V0Q2VsbCIsInRhcmdldCIsIkFycmF5IiwiZnJvbSIsImNsYXNzTGlzdCIsImluY2x1ZGVzIiwiZGF0YVN0cmluZyIsImRhdGFUcmFuc2ZlciIsImdldERhdGEiLCJkYXRhT2JqZWN0IiwiaG9yaXpvbnRhbCIsIk51bWJlciIsImRhdGFzZXQiLCJjb2x1bW4iLCJzaGlwTGVuZ3RoIiwidmVydGljYWwiLCJyb3ciLCJpc1ZhbGlkR2FtZWJvYXJkQ2VsbCIsIkpTT04iLCJwYXJzZSIsImFkZCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJnZXREcmFnZ2VkSW1hZ2UiLCJpbWFnZSIsInNyYyIsImNvbnNvbGUiLCJsb2ciLCJzdHJpbmdpZnkiLCJzZXREYXRhIiwiZHJhZ092ZXIiLCJyb3RhdGVTaGlwSW1hZ2UiLCJpbWFnZUNsYXNzZXMiLCJyZW1vdmUiLCJyb3RhdGVEcmFnZ2VkSW1hZ2UiLCJjbG9uZWRJbWFnZUVsZW1lbnQiLCJjbG9uZU5vZGUiLCJ0ZW1wRGl2IiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiY2xvbmVkSW1hZ2VFbGVtZW50Q2xhc3NlcyIsInJvdGF0ZVBlckxlbmd0aCIsImFwcGVuZENoaWxkIiwiYm9keSIsInNldERyYWdJbWFnZSIsInNldFRpbWVvdXQiLCJyZW1vdmVDaGlsZCIsIkRPTUNvbnRyb2xsZXIiLCJjcmVhdGVCb2FyZENlbGxzIiwiZ2FtZWJvYXJkRE9NIiwiY29sdW1uTGFiZWxzIiwicm93TGFiZWxzIiwiaSIsImoiLCJpbnZpc2libGVQbGFjZWhvbGRlckVsZW1lbnQiLCJzdHlsZSIsInZpc2liaWxpdHkiLCJjb2x1bW5MYWJlbEVsZW1lbnQiLCJ0ZXh0Q29udGVudCIsInJvd0xhYmVsRWxlbWVudCIsImNlbGxFbGVtZW50Iiwic2V0QXR0cmlidXRlIiwiYWRkRXZlbnRMaXN0ZW5lciIsImJpbmQiLCJpbml0aWFsaXplQm9hcmRET00iLCJodW1hblBsYXllckdhbWVib2FyZERPTSIsInF1ZXJ5U2VsZWN0b3IiLCJvcHBvbmVudEdhbWVib2FyZERPTSIsInJvdGF0ZVNoaXBJbWFnZUxpc3RlbmVycyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwicGFpciIsImltZyIsImNoaWxkcmVuIiwiYWRkU2hpcFBsYWNlbWVudERyYWciLCJzaGlwIl0sInNvdXJjZVJvb3QiOiIifQ==