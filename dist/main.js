(()=>{"use strict";const e=e=>{const s="human"!==e&&("computer"===e||void 0),a=(()=>{const e=(()=>{const e=[];for(let t=0;t<10;t++){e.push([]);for(let s=0;s<10;s++)e[t].push(void 0)}return e})(),t=[],s=[],a=[],r=[],o=[];let i=!1;const n=t=>e[t[0]][t[1]];return{getCoordinates:n,getPlacedShips:()=>t,getReceivedMissedShots:()=>s,getReceivedHitShots:()=>a,getSentMissedShots:()=>r,getSentHitShots:()=>o,isAllShipsSunk:()=>i,placeShip:(s,a)=>{for(const t of a)e[t[0]][t[1]]=s;t.push(s)},receiveAttack:e=>{const r=n(e);return void 0!==r?(r.hit(),t.every((e=>e.isSunk()))&&(i=!0),a.push(e),"hit"):(s.push(e),"miss")},addSentMissedShot:e=>{r.push(e)},addSentHitShot:e=>{o.push(e)}}})();let r;const o=(e,t)=>{const s=(e=>{const t=e;let s=0,a=!1;return{getShipLength:()=>t,getShipHits:()=>s,isSunk:()=>a,hit:()=>{if(a)return"That ship has already been sunk!";s+=1,s===t&&(a=!0)}}})(e);a.placeShip(s,t)},i=e=>{const s=r.getGameboard(),o=r.receiveAttack(e);if("hit"===o){if(a.addSentHitShot(e),s.isAllShipsSunk())return void t.endGame(r)}else"miss"===o&&a.addSentMissedShot(e);r.isComputer()&&r.sendComputerAttack()},n=e=>{let t=[];do{t=[];const s=d(),a=c(s,e);t.push(s),t=t.concat(a)}while(t.length<e);return t},d=()=>{const e=[void 0,void 0];do{e[0]=l(),e[1]=l()}while(void 0!==a.getCoordinates(e));return e},c=(e,t)=>{const s=[];if(p(e,t,"up")){const a=[];for(let s=1;s<t;s++)a.push([e[0]-s,e[1]]);s.push(a)}if(p(e,t,"right")){const a=[];for(let s=1;s<t;s++)a.push([e[0],e[1]+s]);s.push(a)}if(p(e,t,"down")){const a=[];for(let s=1;s<t;s++)a.push([e[0]+s,e[1]]);s.push(a)}if(p(e,t,"left")){const a=[];for(let s=1;s<t;s++)a.push([e[0],e[1]-s]);s.push(a)}return 0===s.length?s:s[Math.floor(Math.random()*s.length)]},l=()=>Math.floor(10*Math.random()),h=(e,t)=>e.some((e=>e[0]===t[0]&&e[1]===t[1])),p=(e,t,s)=>{switch(s){case"up":if(e[0]-(t-1)<0)return!1;for(let s=1;s<t;s++)if(void 0!==a.getCoordinates([e[0]-s,e[1]]))return!1;return!0;case"right":if(e[1]+(t-1)>9)return!1;for(let s=1;s<t;s++)if(void 0!==a.getCoordinates([e[0],e[1]+s]))return!1;return!0;case"down":if(e[0]+(t-1)>9)return!1;for(let s=1;s<t;s++)if(void 0!==a.getCoordinates([e[0]+s,e[1]]))return!1;return!0;case"left":if(e[1]-(t-1)<0)return!1;for(let s=1;s<t;s++)if(void 0!==a.getCoordinates([e[0],e[1]-s]))return!1;return!0}};return{isComputer:()=>s,getGameboard:()=>a,getOpposingPlayer:()=>r,setOpposingPlayer:e=>{r=e},addShipToGameboard:o,sendAttack:i,initializeComputerGameboard:()=>{if(!s)return;const e=[5,4,3,3,2];for(const t of e){const e=n(t);o(t,e)}},sendComputerAttack:()=>{if(!s)return;const e=(()=>{const e=r.getGameboard().getReceivedMissedShots(),t=r.getGameboard().getReceivedHitShots(),s=[void 0,void 0];do{s[0]=l(),s[1]=l()}while(h(e,s)||h(t,s));return s})();i(e)},receiveAttack:e=>a.receiveAttack(e),checkIfValidEmptyCoordinates:p}},t=(()=>{const t=[];let s,a=!0;return{getPlayers:()=>t,isInProgress:()=>a,getWinner:()=>s,createGame:()=>{const s=e("human");t.push(s);const a=e("computer");t.push(a),s.setOpposingPlayer(a),a.setOpposingPlayer(s),a.initializeComputerGameboard()},endGame:e=>{a=!1,(e=>{const t=e.getOpposingPlayer();s=t})(e)},resetGame:()=>{t.length=0,a=!0,s=void 0}}})(),s=(()=>{const e=e=>{const t=["A","B","C","D","E","F","G","H","I","J"],r=["1","2","3","4","5","6","7","8","9","10"];for(let o=-1;o<10;o++)for(let i=-1;i<10;i++)if(-1===o)if(-1===i){const t=document.createElement("div");t.classList.add("gameboard-label"),t.style.visibility="hidden",e.appendChild(t)}else{const s=document.createElement("div");s.classList.add("column-label"),s.textContent=t[i],e.appendChild(s)}else if(-1===i){const t=document.createElement("div");t.classList.add("row-label"),t.textContent=r[o],e.appendChild(t)}else{const t=document.createElement("div");t.setAttribute("data-row",o),t.setAttribute("data-column",i),t.classList.add("gameboard-cell"),t.addEventListener("dragover",(e=>{s(e)})),t.addEventListener("drop",(e=>{a(e)})),e.appendChild(t)}},s=()=>{event.preventDefault()},a=e=>{e.preventDefault();const s=e.target;if(Array.from(s.classList).includes("contains-ship-image"))return;const r=e.dataTransfer.getData("image");((e,s)=>{const a=[Number(e.dataset.row),Number(e.dataset.column)],r=Number(s.shipLength);return s.horizontal?t.getPlayers()[0].checkIfValidEmptyCoordinates(a,r,"right")?(console.log("fits"),!0):(console.log("nope"),!1):s.vertical?t.getPlayers()[0].checkIfValidEmptyCoordinates(a,r,"down")?(console.log("fits"),!0):(console.log("nope"),!1):void 0})(s,JSON.parse(r))&&(s.classList.add("contains-ship-image"),s.classList.add("ship-image"),s.classList.add("ship-image-5"),s.classList.add("ship-image-5-2"),s.removeEventListener("drop",a))};return{initializeBoardDOM:()=>{const t=document.querySelector(".player-board"),s=document.querySelector(".opponent-board");e(t),e(s)},insertDraggedImage:a,rotateShipImage:e=>{const t=Array.from(e.classList);t.includes("horizontal")?(e.classList.remove("horizontal"),e.classList.add("vertical")):t.includes("vertical")&&(e.classList.remove("vertical"),e.classList.add("horizontal"))},rotateDraggedImage:e=>{const t=e.target.cloneNode(),s=document.createElement("div");s.classList.add("temp-rotate"),((e,t)=>{const s=Array.from(t.classList);s.includes("horizontal")?e.classList.add("temp-rotate-horizontal"):s.includes("vertical")&&(e.classList.add("temp-rotate-vertical"),"5"===t.dataset.shipLength?e.classList.add("temp-rotate-vertical-5"):"4"===t.dataset.shipLength?e.classList.add("temp-rotate-vertical-4"):"3"===t.dataset.shipLength?e.classList.add("temp-rotate-vertical-3"):"2"===t.dataset.shipLength&&e.classList.add("temp-rotate-vertical-2"))})(s,t),s.appendChild(t),document.body.appendChild(s),e.dataTransfer.setDragImage(s,0,0),setTimeout((()=>{document.body.removeChild(s)}),0)},getDraggedImage:e=>{const t={image:e.target.src,shipLength:e.target.dataset.shipLength,horizontal:!1,vertical:!1};Array.from(e.target.classList).includes("horizontal")?t.horizontal=!0:Array.from(e.target.classList).includes("vertical")&&(t.vertical=!0),console.log(t);const s=JSON.stringify(t);e.dataTransfer.setData("image",s)},dragOver:s}})(),a=()=>{document.querySelectorAll(".ship-placement").forEach((e=>{const t=e.children[0];e.children[2].addEventListener("click",(()=>{s.rotateShipImage(t)}))}))},r=()=>{Array.from(document.querySelectorAll(".ship-piece")).forEach((e=>{e.addEventListener("dragstart",(e=>{s.getDraggedImage(e),s.rotateDraggedImage(e)}))}))};t.createGame(),s.initializeBoardDOM(),a(),r()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,