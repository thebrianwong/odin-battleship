(()=>{"use strict";const e=(()=>{const e=t=>{t.preventDefault(),""!==t.dataTransfer.getData("image")&&(t.target.classList.add("ship-image-5"),t.target.classList.add("ship-image-5-3"),t.target.removeEventListener("drop",e))};return{getDraggedImage:e=>{e.dataTransfer.setData("image",e.target.src)},dragOver:()=>{event.preventDefault()},insertDraggedImage:e,rotateShipImage:e=>{const t=Array.from(e.classList);t.includes("horizontal")?(e.classList.remove("horizontal"),e.classList.add("vertical")):t.includes("vertical")&&(e.classList.remove("vertical"),e.classList.add("horizontal"))},rotateDraggedImage:e=>{const t=e.target.cloneNode(),a=Array.from(t.classList),r=document.createElement("div");r.classList.add("temp-rotate"),a.includes("horizontal")?r.classList.add("temp-rotate-horizontal"):a.includes("vertical")&&r.classList.add("temp-rotate-vertical"),r.appendChild(t),document.body.appendChild(r),e.dataTransfer.setDragImage(r,0,0),setTimeout((()=>{document.body.removeChild(r)}),0)}}})(),t=(()=>{const t=t=>{const a=["A","B","C","D","E","F","G","H","I","J"],r=["1","2","3","4","5","6","7","8","9","10"];for(let d=-1;d<10;d++)for(let i=-1;i<10;i++)if(-1===d)if(-1===i){const e=document.createElement("div");e.classList.add("gameboard-label"),e.style.visibility="hidden",t.appendChild(e)}else{const e=document.createElement("div");e.classList.add("column-label"),e.textContent=a[i],t.appendChild(e)}else if(-1===i){const e=document.createElement("div");e.classList.add("row-label"),e.textContent=r[d],t.appendChild(e)}else{const a=document.createElement("div");a.setAttribute("dataRow",d),a.setAttribute("dataColumn",i),a.classList.add("gameboard-cell"),a.addEventListener("dragover",e.dragOver.bind(event)),a.addEventListener("drop",e.insertDraggedImage.bind(event)),t.appendChild(a)}};return{initializeBoardDOM:()=>{const e=document.querySelector(".player-board"),a=document.querySelector(".opponent-board");t(e),t(a)},rotateShipImageListeners:()=>{document.querySelectorAll(".img-btn-pair").forEach((t=>{const a=t.children[0];t.children[1].addEventListener("click",e.rotateShipImage.bind(event,a))}))},addShipPlacementDrag:()=>{document.querySelector("img").addEventListener("dragstart",(t=>{e.getDraggedImage(t),e.rotateDraggedImage(t)}))}}})();t.initializeBoardDOM(),t.rotateShipImageListeners(),t.addShipPlacementDrag()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,