(()=>{"use strict";const e=(()=>{const e=t=>{t.preventDefault();const a=t.dataTransfer.getData("image");if(""===a)return;const n=document.createElement("img");n.setAttribute("src",a),t.target.appendChild(n),t.target.removeEventListener("drop",e)};return{getDraggedImage:e=>{e.dataTransfer.setData("image",e.target.src)},dragOver:()=>{event.preventDefault()},insertDraggedImage:e}})();(()=>{const t=t=>{const a=["A","B","C","D","E","F","G","H","I","J"],n=["1","2","3","4","5","6","7","8","9","10"];for(let r=-1;r<10;r++)for(let d=-1;d<10;d++)if(-1===r)if(-1===d){const e=document.createElement("div");e.classList.add("gameboard-label"),e.style.visibility="hidden",t.appendChild(e)}else{const e=document.createElement("div");e.classList.add("gameboard-label"),e.textContent=a[d],t.appendChild(e)}else if(-1===d){const e=document.createElement("div");e.classList.add("gameboard-label"),e.textContent=n[r],t.appendChild(e)}else{const a=document.createElement("button");a.setAttribute("dataRow",r),a.setAttribute("dataColumn",d),a.classList.add("gameboard-cell"),a.addEventListener("dragover",e.dragOver.bind(event)),a.addEventListener("drop",e.insertDraggedImage.bind(event)),t.appendChild(a)}};return{initializeBoardDOM:()=>{const e=document.querySelector(".player-board"),a=document.querySelector(".opponent-board");t(e),t(a)}}})().initializeBoardDOM(),document.querySelector("img").addEventListener("dragstart",e.getDraggedImage.bind(event))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQUEsTUFBTUEsRUFBMEIsTUFDOUIsTUFNTUMsRUFBc0JDLElBQzFCQSxFQUFNQyxpQkFDTixNQUFNQyxFQUFRRixFQUFNRyxhQUFhQyxRQUFRLFNBQ3pDLEdBQWMsS0FBVkYsRUFDRixPQUVGLE1BQU1HLEVBQWVDLFNBQVNDLGNBQWMsT0FDNUNGLEVBQWFHLGFBQWEsTUFBT04sR0FDakNGLEVBQU1TLE9BQU9DLFlBQVlMLEdBQ3pCTCxFQUFNUyxPQUFPRSxvQkFBb0IsT0FBUVosRUFBbUIsRUFFOUQsTUFBTyxDQUNMYSxnQkFsQnVCWixJQUN2QkEsRUFBTUcsYUFBYVUsUUFBUSxRQUFTYixFQUFNUyxPQUFPSyxJQUFJLEVBa0JyREMsU0FoQmUsS0FDZmYsTUFBTUMsZ0JBQWdCLEVBZ0J0QkYscUJBRUgsRUF2QitCLEdDRVYsTUFDcEIsTUFBTWlCLEVBQW9CQyxJQUN4QixNQUNNQyxFQUFlLENBQUMsSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssS0FDN0RDLEVBQVksQ0FBQyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxNQUNoRSxJQUFLLElBQUlDLEdBQUssRUFBR0EsRUFITyxHQUdjQSxJQUNwQyxJQUFLLElBQUlDLEdBQUssRUFBR0EsRUFKSyxHQUlnQkEsSUFDcEMsSUFBVyxJQUFQRCxFQUNGLElBQVcsSUFBUEMsRUFBVSxDQUNaLE1BQU1DLEVBQThCaEIsU0FBU0MsY0FBYyxPQUMzRGUsRUFBNEJDLFVBQVVDLElBQUksbUJBQzFDRixFQUE0QkcsTUFBTUMsV0FBYSxTQUMvQ1QsRUFBYVAsWUFBWVksRUFDM0IsS0FBTyxDQUNMLE1BQU1LLEVBQXFCckIsU0FBU0MsY0FBYyxPQUNsRG9CLEVBQW1CSixVQUFVQyxJQUFJLG1CQUNqQ0csRUFBbUJDLFlBQWNWLEVBQWFHLEdBQzlDSixFQUFhUCxZQUFZaUIsRUFDM0IsTUFDSyxJQUFXLElBQVBOLEVBQVUsQ0FDbkIsTUFBTVEsRUFBa0J2QixTQUFTQyxjQUFjLE9BQy9Dc0IsRUFBZ0JOLFVBQVVDLElBQUksbUJBQzlCSyxFQUFnQkQsWUFBY1QsRUFBVUMsR0FDeENILEVBQWFQLFlBQVltQixFQUMzQixLQUFPLENBQ0wsTUFBTUMsRUFBY3hCLFNBQVNDLGNBQWMsVUFDM0N1QixFQUFZdEIsYUFBYSxVQUFXWSxHQUNwQ1UsRUFBWXRCLGFBQWEsYUFBY2EsR0FDdkNTLEVBQVlQLFVBQVVDLElBQUksa0JBQzFCTSxFQUFZQyxpQkFDVixXQUNBakMsRUFBd0JpQixTQUFTaUIsS0FBS2hDLFFBRXhDOEIsRUFBWUMsaUJBQ1YsT0FDQWpDLEVBQXdCQyxtQkFBbUJpQyxLQUFLaEMsUUFHbERpQixFQUFhUCxZQUFZb0IsRUFDM0IsQ0FFSixFQVFGLE1BQU8sQ0FDTEcsbUJBUHlCLEtBQ3pCLE1BQU1DLEVBQTBCNUIsU0FBUzZCLGNBQWMsaUJBQ2pEQyxFQUF1QjlCLFNBQVM2QixjQUFjLG1CQUNwRG5CLEVBQWlCa0IsR0FDakJsQixFQUFpQm9CLEVBQXFCLEVBS3pDLEVBcERxQixHQ0NSSCxxQkFFSTNCLFNBQVM2QixjQUFjLE9BQy9CSixpQkFDUixZQUNBakMsRUFBd0JjLGdCQUFnQm9CLEtBQUtoQyxPIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Rpbi1iYXR0bGVzaGlwLy4vc3JjL2V2ZW50X2xpc3RlbmVyX2NvbnRyb2xsZXIuanMiLCJ3ZWJwYWNrOi8vb2Rpbi1iYXR0bGVzaGlwLy4vc3JjL0RPTV9jb250cm9sbGVyLmpzIiwid2VicGFjazovL29kaW4tYmF0dGxlc2hpcC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBFdmVudExpc3RlbmVyQ29udHJvbGxlciA9ICgoKSA9PiB7XG4gIGNvbnN0IGdldERyYWdnZWRJbWFnZSA9IChldmVudCkgPT4ge1xuICAgIGV2ZW50LmRhdGFUcmFuc2Zlci5zZXREYXRhKFwiaW1hZ2VcIiwgZXZlbnQudGFyZ2V0LnNyYyk7XG4gIH07XG4gIGNvbnN0IGRyYWdPdmVyID0gKCkgPT4ge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gIH07XG4gIGNvbnN0IGluc2VydERyYWdnZWRJbWFnZSA9IChldmVudCkgPT4ge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc3QgaW1hZ2UgPSBldmVudC5kYXRhVHJhbnNmZXIuZ2V0RGF0YShcImltYWdlXCIpO1xuICAgIGlmIChpbWFnZSA9PT0gXCJcIikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBpbWFnZUVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpO1xuICAgIGltYWdlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJzcmNcIiwgaW1hZ2UpO1xuICAgIGV2ZW50LnRhcmdldC5hcHBlbmRDaGlsZChpbWFnZUVsZW1lbnQpO1xuICAgIGV2ZW50LnRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKFwiZHJvcFwiLCBpbnNlcnREcmFnZ2VkSW1hZ2UpO1xuICB9O1xuICByZXR1cm4ge1xuICAgIGdldERyYWdnZWRJbWFnZSxcbiAgICBkcmFnT3ZlcixcbiAgICBpbnNlcnREcmFnZ2VkSW1hZ2UsXG4gIH07XG59KSgpO1xuXG5leHBvcnQgeyBFdmVudExpc3RlbmVyQ29udHJvbGxlciB9O1xuIiwiaW1wb3J0IHsgRXZlbnRMaXN0ZW5lckNvbnRyb2xsZXIgfSBmcm9tIFwiLi9ldmVudF9saXN0ZW5lcl9jb250cm9sbGVyXCI7XG5cbmNvbnN0IERPTUNvbnRyb2xsZXIgPSAoKCkgPT4ge1xuICBjb25zdCBjcmVhdGVCb2FyZENlbGxzID0gKGdhbWVib2FyZERPTSkgPT4ge1xuICAgIGNvbnN0IEJPQVJEQVhFU0xFTkdUSCA9IDEwO1xuICAgIGNvbnN0IGNvbHVtbkxhYmVscyA9IFtcIkFcIiwgXCJCXCIsIFwiQ1wiLCBcIkRcIiwgXCJFXCIsIFwiRlwiLCBcIkdcIiwgXCJIXCIsIFwiSVwiLCBcIkpcIl07XG4gICAgY29uc3Qgcm93TGFiZWxzID0gW1wiMVwiLCBcIjJcIiwgXCIzXCIsIFwiNFwiLCBcIjVcIiwgXCI2XCIsIFwiN1wiLCBcIjhcIiwgXCI5XCIsIFwiMTBcIl07XG4gICAgZm9yIChsZXQgaSA9IC0xOyBpIDwgQk9BUkRBWEVTTEVOR1RIOyBpKyspIHtcbiAgICAgIGZvciAobGV0IGogPSAtMTsgaiA8IEJPQVJEQVhFU0xFTkdUSDsgaisrKSB7XG4gICAgICAgIGlmIChpID09PSAtMSkge1xuICAgICAgICAgIGlmIChqID09PSAtMSkge1xuICAgICAgICAgICAgY29uc3QgaW52aXNpYmxlUGxhY2Vob2xkZXJFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgICAgIGludmlzaWJsZVBsYWNlaG9sZGVyRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiZ2FtZWJvYXJkLWxhYmVsXCIpO1xuICAgICAgICAgICAgaW52aXNpYmxlUGxhY2Vob2xkZXJFbGVtZW50LnN0eWxlLnZpc2liaWxpdHkgPSBcImhpZGRlblwiO1xuICAgICAgICAgICAgZ2FtZWJvYXJkRE9NLmFwcGVuZENoaWxkKGludmlzaWJsZVBsYWNlaG9sZGVyRWxlbWVudCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IGNvbHVtbkxhYmVsRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgICAgICBjb2x1bW5MYWJlbEVsZW1lbnQuY2xhc3NMaXN0LmFkZChcImdhbWVib2FyZC1sYWJlbFwiKTtcbiAgICAgICAgICAgIGNvbHVtbkxhYmVsRWxlbWVudC50ZXh0Q29udGVudCA9IGNvbHVtbkxhYmVsc1tqXTtcbiAgICAgICAgICAgIGdhbWVib2FyZERPTS5hcHBlbmRDaGlsZChjb2x1bW5MYWJlbEVsZW1lbnQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChqID09PSAtMSkge1xuICAgICAgICAgIGNvbnN0IHJvd0xhYmVsRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgICAgcm93TGFiZWxFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJnYW1lYm9hcmQtbGFiZWxcIik7XG4gICAgICAgICAgcm93TGFiZWxFbGVtZW50LnRleHRDb250ZW50ID0gcm93TGFiZWxzW2ldO1xuICAgICAgICAgIGdhbWVib2FyZERPTS5hcHBlbmRDaGlsZChyb3dMYWJlbEVsZW1lbnQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnN0IGNlbGxFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICAgICAgICBjZWxsRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJkYXRhUm93XCIsIGkpO1xuICAgICAgICAgIGNlbGxFbGVtZW50LnNldEF0dHJpYnV0ZShcImRhdGFDb2x1bW5cIiwgaik7XG4gICAgICAgICAgY2VsbEVsZW1lbnQuY2xhc3NMaXN0LmFkZChcImdhbWVib2FyZC1jZWxsXCIpO1xuICAgICAgICAgIGNlbGxFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICAgICAgICBcImRyYWdvdmVyXCIsXG4gICAgICAgICAgICBFdmVudExpc3RlbmVyQ29udHJvbGxlci5kcmFnT3Zlci5iaW5kKGV2ZW50KVxuICAgICAgICAgICk7XG4gICAgICAgICAgY2VsbEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcbiAgICAgICAgICAgIFwiZHJvcFwiLFxuICAgICAgICAgICAgRXZlbnRMaXN0ZW5lckNvbnRyb2xsZXIuaW5zZXJ0RHJhZ2dlZEltYWdlLmJpbmQoZXZlbnQpXG4gICAgICAgICAgKTtcbiAgICAgICAgICAvLyBzb21lIGNsaWNrIGV2ZW50IGxpc3RlbmVyIHdoZXJlIGF0dGFjayBpcyBtYWRlIE9SIHByaW9yIHRvIHRoYXQsIHBsYWNpbmcgc2hpcCBvbiB0aGF0IGNlbGxcbiAgICAgICAgICBnYW1lYm9hcmRET00uYXBwZW5kQ2hpbGQoY2VsbEVsZW1lbnQpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9O1xuICBjb25zdCBpbml0aWFsaXplQm9hcmRET00gPSAoKSA9PiB7XG4gICAgY29uc3QgaHVtYW5QbGF5ZXJHYW1lYm9hcmRET00gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBsYXllci1ib2FyZFwiKTtcbiAgICBjb25zdCBvcHBvbmVudEdhbWVib2FyZERPTSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIub3Bwb25lbnQtYm9hcmRcIik7XG4gICAgY3JlYXRlQm9hcmRDZWxscyhodW1hblBsYXllckdhbWVib2FyZERPTSk7XG4gICAgY3JlYXRlQm9hcmRDZWxscyhvcHBvbmVudEdhbWVib2FyZERPTSk7XG4gIH07XG4gIHJldHVybiB7XG4gICAgaW5pdGlhbGl6ZUJvYXJkRE9NLFxuICB9O1xufSkoKTtcblxuZXhwb3J0IHsgRE9NQ29udHJvbGxlciB9O1xuIiwiaW1wb3J0IHsgRE9NQ29udHJvbGxlciB9IGZyb20gXCIuL0RPTV9jb250cm9sbGVyXCI7XG5pbXBvcnQgeyBFdmVudExpc3RlbmVyQ29udHJvbGxlciB9IGZyb20gXCIuL2V2ZW50X2xpc3RlbmVyX2NvbnRyb2xsZXJcIjtcblxuRE9NQ29udHJvbGxlci5pbml0aWFsaXplQm9hcmRET00oKTtcblxuY29uc3QgdGVzdEltYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImltZ1wiKTtcbnRlc3RJbWFnZS5hZGRFdmVudExpc3RlbmVyKFxuICBcImRyYWdzdGFydFwiLFxuICBFdmVudExpc3RlbmVyQ29udHJvbGxlci5nZXREcmFnZ2VkSW1hZ2UuYmluZChldmVudClcbik7XG4iXSwibmFtZXMiOlsiRXZlbnRMaXN0ZW5lckNvbnRyb2xsZXIiLCJpbnNlcnREcmFnZ2VkSW1hZ2UiLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwiaW1hZ2UiLCJkYXRhVHJhbnNmZXIiLCJnZXREYXRhIiwiaW1hZ2VFbGVtZW50IiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlIiwidGFyZ2V0IiwiYXBwZW5kQ2hpbGQiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZ2V0RHJhZ2dlZEltYWdlIiwic2V0RGF0YSIsInNyYyIsImRyYWdPdmVyIiwiY3JlYXRlQm9hcmRDZWxscyIsImdhbWVib2FyZERPTSIsImNvbHVtbkxhYmVscyIsInJvd0xhYmVscyIsImkiLCJqIiwiaW52aXNpYmxlUGxhY2Vob2xkZXJFbGVtZW50IiwiY2xhc3NMaXN0IiwiYWRkIiwic3R5bGUiLCJ2aXNpYmlsaXR5IiwiY29sdW1uTGFiZWxFbGVtZW50IiwidGV4dENvbnRlbnQiLCJyb3dMYWJlbEVsZW1lbnQiLCJjZWxsRWxlbWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJiaW5kIiwiaW5pdGlhbGl6ZUJvYXJkRE9NIiwiaHVtYW5QbGF5ZXJHYW1lYm9hcmRET00iLCJxdWVyeVNlbGVjdG9yIiwib3Bwb25lbnRHYW1lYm9hcmRET00iXSwic291cmNlUm9vdCI6IiJ9